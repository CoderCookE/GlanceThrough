{
  "name": "passport-pocket",
  "version": "0.0.4",
  "description": "Pocket authentication strategy for Passport.",
  "main": "./pocket-strategy.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/Siedrix/passport-pocket.git"
  },
  "dependencies": {
    "passport": "0.1.15",
    "request": "2.12.0"
  },
  "keywords": [
    "passport",
    "pocket",
    "getpocket"
  ],
  "readme": "# Passport-Pocket \n\n[Passport](http://passportjs.org/) strategy for authenticating with [Pocket](http://getpocket.com)\nusing the OAuth 1.0a API.\n\nThis module lets you authenticate using Pocket in your Node.js applications.\nBy plugging into Passport, Twitter authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Installation\n\n    $ npm install passport-pocket\n\n## Usage\n\n#### Configure Strategy\n\nThe Pocket authentication strategy authenticates users using a Pocket account.  \nThe strategy requires a `verify` callback, which receives the\naccess token and username as arguments. The `verify` callback must\ncall `done` providing a user to complete authentication.\n\nIn order to identify your application to Pocket, specify the consumer key and callback URL within `options`.  \nThe consumer key and secret are obtained by [creating an application](http://getpocket.com/developer/apps/new) at\nPockets's [developer](http://getpocket.com/developer/) site.\n\n\tPOCKET_CONSUMER_KEY = \"Pocket consumer key\";\n\n\t// Passport Set up\n\tvar pocketStrategy = new PocketStrategy({\n\t\t\tconsumerKey    : POCKET_CONSUMER_KEY,\n\t\t\tcallbackURL    : \"http://127.0.0.1:3000/auth/pocket/callback\"\n\t\t},function(username, accessToken, done) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\treturn done(null, {\n\t\t\t\t\tusername    : username,\n\t\t\t\t\taccessToken : accessToken\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t);\n\n\tpassport.use(pocketStrategy);\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'pocket'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n\t// Passport routes for express\n\tserver.get('/auth/pocket',passport.authenticate('pocket'),\n\tfunction(req, res){\n\t    // The request will be redirected to Pocket for authentication, so this\n\t    // function will not be called.\n\t});\n\n\tserver.get('/auth/pocket/callback', passport.authenticate('pocket', { failureRedirect: '/login' }),\n\tfunction(req, res) {\n\t    res.redirect('/');\n\t});\n\n## Examples\n\nFor a complete, working example check the server.js file[Moving it to a folder].\n\n\n## Thanks to\n\n- [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n    PHPBBMODDERS BEERWARE LICENSE\n    version 1, may 7 2008\n\n    this license is based on Poul-Henning Kamp 's original\n    beerware license. it's been slightly modified to be more suitable for having\n    in a separate file.\n\n    as long as you keep any copyright notices and any mentions of this license\n    intact (and include this file if it is a released package), you can do\n    whatever you want with this stuff. if we meet one day, and you think it's\n    worth it, you can buy me a beer in return.\n\n    there is no warranty for this work, use it at your own risk.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Siedrix/passport-pocket/issues"
  },
  "homepage": "https://github.com/Siedrix/passport-pocket",
  "_id": "passport-pocket@0.0.4",
  "dist": {
    "shasum": "4096e9f9feda20976d92ea53a918db867588d401"
  },
  "_from": "passport-pocket@0.0.4",
  "_resolved": "https://registry.npmjs.org/passport-pocket/-/passport-pocket-0.0.4.tgz"
}
